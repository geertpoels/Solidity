pragma solidity >=0.4.22 <0.7.0;
contract quetelet
{
    // Variables
    string public tokenName;
    string public tickerCode;
    uint public numberOfTransfers;

    /* This creates an array with all balances */
    mapping (address => uint256) public balanceOf;

    /* Initialises contract with initial supply tokens to the creator of the contract */
    constructor(uint256 initialSupply, string name, string code) public
    {
        balanceOf[msg.sender] = initialSupply; // Give the creator all initial tokens
        tokenName = name; // Name of the cryptocurrency token
        tickerCode = code; // Ticker code of the cryptocurrency token
        numberOfTransfers = 0; // Count of transfers made
    }

    /* Send coins */
    function transfer(address _to, uint256 _value) public returns (bool success)
    {
        require(balanceOf[msg.sender] >= _value); // Check if the sender has enough
        require(balanceOf[_to] + _value >= balanceOf[_to]); // Check for overflows
        balanceOf[msg.sender] -= _value; // Subtract from the sender
        balanceOf[_to] += _value; // Add the same to the recipient
        numberOfTransfers += 1;
        return true;
    }
}